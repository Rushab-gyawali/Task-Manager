@model MVCERP.Web.Models.LoginModel
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title> Login </title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
    <style>
        .login-form {
            width: 340px;
            margin: 50px auto;
            font-size: 15px;
        }

            .login-form form {
                margin-bottom: 15px;
                background: #f7f7f7;
                box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
                padding: 30px;
            }

            .login-form h2 {
                margin: 0 0 15px;
            }

        .form-control, .btn {
            min-height: 38px;
            border-radius: 2px;
        }

        .btn {
            font-size: 15px;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="login-form">
        @using (Html.BeginForm("Index", "Home", FormMethod.Post, new { @id = "loginform" }))
        {
            <h2 class="text-center">Log in</h2>
            <div class="text-danger">
                @ViewData["msg"]
            </div>
            <div class="form-group">
                <div class="text-danger">
                    @Html.ValidationMessageFor(x => x.UserName)
                </div>

                @Html.TextBoxFor(x => x.UserName, new { @placeholder = "Enter Username", @class = "form-control", @id = "username" })
            </div>

            <div class="form-group">
                <div class="text-danger">
                    @Html.ValidationMessageFor(x => x.Password)
                </div>
                @Html.PasswordFor(x => x.Password, new { @placeholder = "Enter Password", @class = "form-control", id = "password" })
                <input type="checkbox" onclick="myFunction()">Show Password
            </div>

            <div class="form-group">
                <input type="submit" value="Login" class="btn btn-primary" id="btn" />

            </div>
            <div class="clearfix">
                <label class="float-left form-check-label"><input type="checkbox">Remember me</label>

            </div>
        }

    </div>

    <script>
        function myFunction() {
            var x = document.getElementById("password");
            if (x.type === "password") {
                x.type = "text";
            } else {
                x.type = "password";
            }
        }
    </script>

</body>
</html>
