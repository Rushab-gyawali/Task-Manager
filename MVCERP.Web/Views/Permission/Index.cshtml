@model List<MVCERP.Shared.Common.PermissionCommon>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/MeroTaskMainLayout.cshtml";
}
<script src="//cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<h2>Permissions</h2>

<form>
    <div class="col-xl-6">
        <div class="form-group">
            <label for="RoleId">Roles</label>
            @Html.DropDownList("RoleName", ViewData["Roles"] as IEnumerable<SelectListItem>, new { @class = "form-control", @id = "RoleName" })
        </div>
        @{

            var parentMenu = Model.Select(x => x.ParentMenu).Distinct().ToList();
        }

        <div class="card">
            <div class="card-header d-block">
                <h4 class="card-title">Permission</h4>
            </div>
            <div class="card-body">
                <!-- Default accordion -->

                @foreach (var items in parentMenu)
                {
                    <div id="accordion-one_@items" class="accordion accordion-primary">
                        <div class="accordion__header rounded-lg collapsed" data-toggle="collapse" data-target="#default_collapseOne_@items" aria-expanded="false">
                            <span class="accordion__header--text">@items</span>
                        </div>
                    </div>
                    var menulist = Model.Where(x => x.ParentMenu == items).Select(x => new { x.Menu, x.MenuId });
                    foreach (var data in menulist)
                    {
                        <div class="accordion__item">
                            <div id="default_collapseOne_@items" class="accordion__body collapse" data-parent="#accordion-one_@items" aria-expanded="false" style="">
                                <div class="accordion__body--text">
                                    <input type="checkbox" id="Menu_@data.Menu" class="form-check-input menuid" value="@data.MenuId" />
                                    <label class="form-check-label" for="Menu_@data.Menu">@data.Menu</label>
                                </div>
                            </div>
                        </div>
                    }


                }



            </div>
        </div>
        <input type="hidden" value="" id="RolePermission" />
        <button type="button" class="btn btn-success btn-sm" id="btnsubmit" >Add Permision</button>
    </div>
</form>

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script>

    $("#btnsubmit").on("click", function GetPermissionRole() {
        $("#RolePermission").val(JSON.stringify(RoleObject));

        var Data = {
            RolePermission: $("#RolePermission").val(),
            RoleName: $("#RoleName").val()
        }

        $.get("/Permission/ManagePermission?data=" + JSON.stringify(Data), function (data, status) {
            window.location = "/Permission/Index";
        });
    });
    var RoleObject = [];

    $(".menuid").on("click", function () {
        if ($(this).prop("checked") == true) {
                var checkObject = new Object();                
                checkObject.MenuID = $(this).val();
                RoleObject.push(checkObject);

        }
        else {
            var uncheck = $(this).val();
            var duplicate = RoleObject;
            $.each(duplicate, function (i, el) {
                if (this.RoleName == uncheck) {
                    RoleObject.splice(i, 1);
                }
            });
        }
    });
</script>
